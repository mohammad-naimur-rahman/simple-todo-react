{"version":3,"sources":["Components/ToDo/ToDo.js","App.js","reportWebVitals.js","index.js"],"names":["ToDo","props","className","onClick","deleteItem","id","text","App","useState","inputList","setinputList","items","setitems","oldItems","filter","arrEl","index","type","name","placeholder","onChange","e","target","value","newItems","map","item","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PASeA,EANF,SAACC,GACV,OACI,qBAAIC,UAAU,KAAd,UAAmB,wBAAQA,UAAU,QAAQC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,KAAhE,eAAgFJ,EAAMK,SCyClGC,MA1Cf,WAAgB,IAAD,EAEqBC,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGaF,mBAAS,IAHtB,mBAGNG,EAHM,KAGCC,EAHD,KAePR,EAAa,SAACC,GAClBO,GAAS,SAACC,GACR,OAAOA,EAASC,QAAO,SAACC,EAAOC,GAC7B,OAAOA,IAAUX,SAKvB,OACE,qBAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACA,4CACA,uBACA,uBAAOe,KAAK,OAAOC,KAAK,GAAGb,GAAG,YAAYc,YAAY,aAAaC,SAxBvD,SAACC,GACjBX,EAAaW,EAAEC,OAAOC,QAuBsEA,MAAOd,IAC/F,wBAAQP,UAAU,SAASC,QArBb,WAClB,IAAMqB,EAAQ,sBAAOb,GAAP,CAAcF,IAC5BG,EAASY,GACTd,EAAa,KAkBT,eAEA,oBAAIR,UAAU,KAAd,SAEIS,EAAMc,KAAI,SAACC,EAAMV,GAAP,OAAiB,cAAC,EAAD,CAAkBX,GAAIW,EAAOV,KAAMoB,EAAMtB,WAAYA,GAA1CY,cC1BnCW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca6ecf25.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ToDo.css';\r\n\r\nconst ToDo = (props) => {\r\n    return (\r\n        <li className='li'><button className=\"cross\" onClick={() => props.deleteItem(props.id)}>+</button>{props.text}</li>\r\n    );\r\n};\r\n\r\nexport default ToDo;","import './App.css';\nimport React, { useState } from 'react';\nimport ToDo from './Components/ToDo/ToDo';\n\nfunction App() {\n\n  const [inputList, setinputList] = useState('');\n  const [items, setitems] = useState([]);\n\n  const itemEvent = (e) => {\n    setinputList(e.target.value);\n  };\n\n  const listOfItems = () => {\n    const newItems = [...items, inputList];\n    setitems(newItems);\n    setinputList('');\n  };\n\n  const deleteItem = (id) => {\n    setitems((oldItems) => {\n      return oldItems.filter((arrEl, index) => {\n        return index !== id;\n      })\n    })\n  }\n\n  return (\n    <div className=\"main-div\">\n      <div className=\"center-div\">\n        <br />\n        <h1> ToDo List</h1>\n        <br />\n        <input type=\"text\" name=\"\" id=\"inputText\" placeholder='Add a item' onChange={itemEvent} value={inputList} />\n        <button className='addBtn' onClick={listOfItems}>+</button>\n\n        <ol className='ol'>\n          {\n            items.map((item, index) => <ToDo key={index} id={index} text={item} deleteItem={deleteItem}></ToDo>)\n          }\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}